org: samadarshad
app: serverless-todo-app
service: serverless-todo-app


plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-2'}

functions:

  # Auth:
  #   handler: src/lambda/auth/auth0Authorizer.handler

  # TODO: Configure this function
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          path: todos

#   # TODO: Configure this function
#   CreateTodo:
#     handler: src/lambda/http/createTodo.handler
#     events:
#       - http:
#           method: post
#           path: todos

#   # TODO: Configure this function
#   UpdateTodo:
#     handler: src/lambda/http/updateTodo.handler
#     events:
#       - http:
#           method: patch
#           path: todos/{todoId}

#   # TODO: Configure this function
#   DeleteTodo:
#     handler: src/lambda/http/deleteTodo.handler
#     events:
#       - http:
#           method: delete
#           path: todos/{todoId}

#   # TODO: Configure this function
#   GenerateUploadUrl:
#     handler: src/lambda/http/generateUploadUrl.handler
#     events:
#       - http:
#           method: post
#           path: todos/{todoId}/attachment

resources:
  Resources:
    TodosDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: todoId
            AttributeType: S
        KeySchema:
          - AttributeName: todoId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: TODOS_TABLE

custom:
  serverless-offline:
    httpPort: 3003

  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    stages:
      - dev
    seed:
      test:
        sources:
          - table: TODOS_TABLE
            sources: [./items.json]