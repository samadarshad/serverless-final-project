Auth:
  handler: src/lambda/auth/auth0Authorizer.handler
  environment:
    JWKS_URL: https://samadarshad.eu.auth0.com/.well-known/jwks.json

GetTodos:
  handler: src/lambda/http/getTodos.handler
  events:
    - http:
        method: get
        path: todos
        authorizer: Auth
        cors: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}

CreateTodo:
  handler: src/lambda/http/createTodo.handler
  events:
    - http:
        method: post
        path: todos
        authorizer: Auth
        cors: true
        request:
          schema:
            application/json: ${file(models/create-todo-request.json)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}


UpdateTodo:
  handler: src/lambda/http/updateTodo.handler
  events:
    - http:
        method: patch
        path: todos/{todoId}
        authorizer: Auth
        cors: true
        request:
          schema:
            application/json: ${file(models/update-todo-request.json)}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:UpdateItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}/index/${self:provider.environment.TODO_INDEX}

DeleteTodo:
  handler: src/lambda/http/deleteTodo.handler
  events:
    - http:
        method: delete
        path: todos/{todoId}
        authorizer: Auth
        cors: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}/index/${self:provider.environment.TODO_INDEX}
    - Effect: Allow
      Action:
        - s3:DeleteObject
      Resource: arn:aws:s3:::${self:provider.environment.ATTACHMENTS_BUCKET}/*

GenerateUploadUrl:
  handler: src/lambda/http/generateUploadUrl.handler
  events:
    - http:
        method: post
        path: todos/{todoId}/attachment
        cors: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: arn:aws:s3:::${self:provider.environment.ATTACHMENTS_BUCKET}/*

UpdateTodoWithAttachments:
  handler: src/lambda/s3/updateTodoWithAttachment.handler
  events:
    - s3:
        bucket: ${self:provider.environment.ATTACHMENTS_BUCKET}
        event: s3:ObjectCreated:Put
        existing: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:UpdateItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}/index/${self:provider.environment.TODO_INDEX}